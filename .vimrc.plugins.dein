" Modeline and Notes {
" vim: set sw=4 ts=4 sts=4 et tw=78 foldmarker={,} foldlevel=0 foldmethod=marker:
"             __   _  ____  _        _               _
"           //  \\/ |/__  || |  ____| |      __   __(_)_ __ ___
"           \\__//| |  / / | | / __/| | _____\ \ / /| | '_ ` _ \
"           //  \\| | / /_ | | | |_ | ||_____|\ V / | | | | | | |
"           \\__//|_|/____||_| \___\|_|        \_/  |_|_| |_| |_|

"   This is the personal .vimrc.plugins file of 812lcl.
"   You can find me at http://812lcl.com
" }

" Plugins {

function s:AddPlugins()

    " In your .vimrc.before.local file, list only the plugin groups you will use
    " 'general', 'programming', 'youcompleteme', 'neocomplcache', 'neocomplete',
    " 'python', 'php', 'web', 'ruby', 'haskell','go', 'misc', 'unite', 'others'
    if !exists('g:lcl_bundle_groups')
        if has('win32') || has('win64')
            let g:lcl_bundle_groups=['general', 'neocomplcache', 'programming', 'python', 'web', 'misc', 'denite', 'php']
        elseif has('macunix')
            let g:lcl_bundle_groups=['general', 'youcompleteme', 'neocomplcache', 'programming', 'python', 'web', 'misc', 'unite', 'others', 'php', 'go']
        else
            let g:lcl_bundle_groups=['general', 'youcompleteme', 'neocomplcache', 'programming', 'python', 'web', 'misc', 'denite', 'others', 'php', 'go']
        endif
    endif

    " To override all the included bundles, add the following to your
    " .vimrc.plugins.local file:
    "   let g:override_812lcl_bundles = 1
    if !exists("g:override_812lcl_bundles")

    " General {
        if count(g:lcl_bundle_groups, 'general')
            call dein#add('wsdjeg/dein-ui.vim')
            call dein#add('scrooloose/nerdtree', { 'on_cmd': ['NERDTree', 'NERDTreeToggle', 'NERDTreeFind'] })
            call dein#add('Xuyuanp/nerdtree-git-plugin', { 'on_cmd': ['NERDTreeToggle', 'NERDTreeFind'] })
            call dein#add('tiagofumo/vim-nerdtree-syntax-highlight', { 'on_cmd': ['NERDTreeToggle', 'NERDTreeFind'] })
            call dein#add('ryanoasis/vim-devicons')
            call dein#add('altercation/vim-colors-solarized')
            call dein#add('tomasr/molokai')
            call dein#add('tpope/vim-surround')
            call dein#add('tpope/vim-repeat')
            call dein#add('tpope/vim-rsi')
            call dein#add('tpope/vim-unimpaired')
            call dein#add('vim-scripts/sessionman.vim')
            call dein#add('vim-scripts/matchit.zip')
            call dein#add('bling/vim-airline')
            call dein#add('vim-airline/vim-airline-themes')
            call dein#add('vim-scripts/DoxygenToolkit.vim', { 'on_ft': ['c', 'cpp'] })
            call dein#add('Lokaltog/vim-easymotion')
            call dein#add('flazz/vim-colorschemes')
            call dein#add('mbbill/undotree', { 'on_cmd': 'UndotreeToggle' })
            call dein#add('Yggdroot/indentLine')
            call dein#add('kshenoy/vim-signature')
            call dein#add('vim-scripts/TaskList.vim')
            call dein#add('mbbill/fencview', { 'on_cmd': 'FencAutoDetect' })
            call dein#add('sheerun/vim-polyglot')
            call dein#add('osyo-manga/vim-anzu')
            call dein#add('t9md/vim-choosewin')
            call dein#add('mhinz/vim-startify')
            call dein#add('osyo-manga/vim-over')
            call dein#add('hecal3/vim-leader-guide')
            call dein#add('justinmk/vim-gtfo')
            call dein#add('skywind3000/vim-keysound') "pip3 install pysdl2 && brew install sdl2 sdl2_mixer
        endif
    " }

    " General Programming {
        if count(g:lcl_bundle_groups, 'programming')
            call dein#add('scrooloose/syntastic')
            call dein#add('tpope/vim-fugitive')
            call dein#add('gregsexton/gitv', { 'on_cmd': 'Gitv' })
            call dein#add('mhinz/vim-signify')
            call dein#add('scrooloose/nerdcommenter')
            call dein#add('majutsushi/tagbar')
            call dein#add('lvht/tagbar-markdown', { 'on_ft': 'markdown' })
            call dein#add('junegunn/vim-easy-align')
            call dein#add('AndrewRadev/splitjoin.vim')
            call dein#add('jiangmiao/auto-pairs')
            call dein#add('terryma/vim-multiple-cursors')
            call dein#add('ludovicchabant/vim-gutentags')
            call dein#add('812lcl/gutentags_plus')
            call dein#add('kana/vim-textobj-user')
            call dein#add('kana/vim-textobj-indent')
            call dein#add('kana/vim-textobj-syntax')
            call dein#add('kana/vim-textobj-function', { 'on_ft':['c', 'cpp', 'vim', 'java'] })
            call dein#add('sgur/vim-textobj-parameter')
            call dein#add('octol/vim-cpp-enhanced-highlight', { 'on_ft':['c', 'cpp'] })
            call dein#add('Shougo/echodoc.vim')
        endif
    " }

    " Snippets & AutoComplete {
        if count(g:lcl_bundle_groups, 'youcompleteme')
            call dein#add('Valloric/YouCompleteMe')     "{ 'build': './install.py  --clang-completer --gocode-completer' }
        else
            call dein#add('ervandew/supertab')
        endif
        if count(g:lcl_bundle_groups, 'neocomplcache')
            call dein#add('Shougo/neocomplcache.vim')
            call dein#add('JazzCore/neocomplcache-ultisnips')
            call dein#add('SirVer/ultisnips')
            call dein#add('honza/vim-snippets')
            call dein#add('vim-scripts/javacomplete', { 'on_ft': 'java' })
        elseif count(g:lcl_bundle_groups, 'neocomplete')
            call dein#add('Shougo/neocomplete.vim')
            call dein#add('Shougo/neosnippet')
            call dein#add('Shougo/neosnippet-snippets')
            call dein#add('vim-scripts/javacomplete', { 'on_ft': 'java' })
        endif
    " }

    " Python {
        if count(g:lcl_bundle_groups, 'python')
            call dein#add('klen/python-mode', { 'on_ft': 'python' })
            call dein#add('yssource/python.vim', { 'on_ft': 'python' })
            call dein#add('vim-scripts/python_match.vim', { 'on_ft': 'python' })
            call dein#add('vim-scripts/pythoncomplete', { 'on_ft': 'python' })
            call dein#add('jmcantrell/vim-virtualenv', { 'on_ft': 'python' })
        endif
    " }

    " PHP {
        if count(g:lcl_bundle_groups, 'php')
            call dein#add('spf13/PIV', { 'on_ft': 'php' })
            call dein#add('arnaud-lb/vim-php-namespace', { 'on_ft': 'php' })
        endif
    " }

    " Web {
        if count(g:lcl_bundle_groups, 'web')
            call dein#add('hail2u/vim-css3-syntax', { 'on_ft': ['html', 'css'] })
            call dein#add('mattn/emmet-vim', { 'on_ft': ['html', 'css'] })
            call dein#add('gorodinskiy/vim-coloresque')
            call dein#add('pangloss/vim-javascript', { 'on_ft': ['js', 'javascript'] })
        endif
    " }

    " Ruby {
        if count(g:lcl_bundle_groups, 'ruby')
            call dein#add('tpope/vim-rails', { 'on_ft': 'ruby' })
        endif
    " }

    " Haskell {
        if count(g:lcl_bundle_groups, 'haskell')
            call dein#add('travitch/hasksyn')
            call dein#add('dag/vim2hs')
            call dein#add('Twinside/vim-haskellConceal')
            call dein#add('Twinside/vim-haskellFold')
            call dein#add('lukerandall/haskellmode-vim')
            call dein#add('eagletmt/neco-ghc')
            call dein#add('eagletmt/ghcmod-vim')
            call dein#add('adinapoli/cumino')
            call dein#add('bitc/vim-hdevtools')
        endif
    " }

    " Go Lang {
        if count(g:lcl_bundle_groups, 'go')
            call dein#add('fatih/vim-go', { 'on_ft': 'go' })    "GoUpdateBinaries
        endif
    " }

    " Misc {
        if count(g:lcl_bundle_groups, 'misc')
            call dein#add('plasticboy/vim-markdown', { 'on_ft': 'markdown' })
            if has('mac')
                call dein#add('junegunn/vim-xmark', { 'build': 'make', 'on_ft': 'markdown' })
            endif
        endif
    " }

    " Unite {
        if count(g:lcl_bundle_groups, 'unite')
            call dein#add('Shougo/unite.vim')
            call dein#add('Shougo/neomru.vim')
            call dein#add('ujihisa/unite-colorscheme')
            call dein#add('ujihisa/unite-locate')
            call dein#add('tacroe/unite-mark')
            call dein#add('kmnk/vim-unite-svn')
            call dein#add('chemzqm/unite-location')
        endif
    " }

    " Denite {
        if count(g:lcl_bundle_groups, 'denite')
            if has('nvim')
                call dein#add('Shougo/denite.nvim', { 'build': ':UpdateRemotePlugins'  })
                call dein#add('Shougo/defx.nvim', { 'build': ':UpdateRemotePlugins' })
            else
                call dein#add('Shougo/defx.nvim')
                call dein#add('roxma/nvim-yarp')
                call dein#add('roxma/vim-hug-neovim-rpc')
            endif
            call dein#add('ozelentok/denite-gtags')
            call dein#add('chemzqm/unite-location')
            call dein#add('Shougo/neomru.vim')
        endif
    " }

    " Others {
        if count(g:lcl_bundle_groups, 'others')
            if has('mac')
                call dein#add('rizzatti/dash.vim')
                call dein#add('mattn/webapi-vim')
                call dein#add('mattn/gist-vim')
            endif
            call dein#add('Shougo/vimproc', { 'build': 'make' })
            call dein#add('ianva/vim-youdao-translater')
            call dein#add('wakatime/vim-wakatime')
        endif
    " }
    endif
endfunction
" }

" Environment {
    "dein Scripts-----------------------------
    if &compatible
        set nocompatible               " Be iMproved
    endif

    " Required:
    set runtimepath+=$HOME/.vim/bundle/repos/github.com/Shougo/dein.vim

    " Required:
    if dein#load_state('~/.vim/bundle')
        call dein#begin('~/.vim/bundle')

        " Let dein manage dein
        " Required:
        call dein#add('~/.vim/bundle/repos/github.com/Shougo/dein.vim')

        " Add or remove your plugins here:
        call s:AddPlugins()

        " Required:
        call dein#end()
        call dein#save_state()
    endif

    " Required:
    filetype plugin indent on
    syntax enable

    " If you want to install not installed plugins on startup.
    "if dein#check_install()
    "  call dein#install()
    "endif
" }
